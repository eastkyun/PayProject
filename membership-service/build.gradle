plugins {
    id("com.palantir.docker") version "0.35.0"
}
ext{
//    axonVersion = "4.6.0"
}

group = 'com.pay.membership'
version = '1.0.2'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'junit:junit:4.13.1'
//    runtimeOnly 'com.h2database:h2'
    implementation project(path: ':common')
// https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'

//    implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
//    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"
}

docker {
    println(tasks.bootJar.outputs.files)
    // image 이름
    name rootProject.name+'-'+project.name + ":" + version
    // 어떤 Dockerfile
    dockerfile file('../Dockerfile')
    // 어떤 파일들을 Dockerfile 복사할 것인가
    files tasks.bootJar.outputs.files
    // 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}